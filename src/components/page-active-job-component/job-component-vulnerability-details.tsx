import { Accordion, Typography } from '@equinor/eds-core-react';
import { type FunctionComponent, useEffect } from 'react';

import AsyncResource from '../async-resource/async-resource';
import { ComponentScanDetails } from '../component/component-scan-details';
import { scanApi } from '../../store/scan-api';

export interface JobComponentVulnerabilityDetailsProps {
  appName: string;
  envName: string;
  componentName: string;
}

export const JobComponentVulnerabilityDetails: FunctionComponent<
  JobComponentVulnerabilityDetailsProps
> = ({ appName, envName, componentName }) => {
  const [trigger, { data, ...state }] =
    scanApi.endpoints.getJobVulnerabilities.useLazyQuery();

  useEffect(() => {
    const request = trigger({ appName, envName, jobName: componentName });
    return () => request?.abort();
  }, [appName, componentName, envName, trigger]);

  const vulnerabilityCount = data?.vulnerabilities?.length ?? 0;

  return (
    <Accordion className="accordion elevated" chevronPosition="right">
      <Accordion.Item isExpanded={state.isLoading || vulnerabilityCount > 0}>
        <Accordion.Header>
          <Accordion.HeaderTitle>
            <Typography className="whitespace-nowrap" variant="h4" as="span">
              Vulnerabilities ({state.isLoading ? 'â€¦' : vulnerabilityCount})
            </Typography>
          </Accordion.HeaderTitle>
        </Accordion.Header>
        <Accordion.Panel>
          <AsyncResource asyncState={state}>
            {data && <ComponentScanDetails scan={data} />}
          </AsyncResource>
        </Accordion.Panel>
      </Accordion.Item>
    </Accordion>
  );
};
