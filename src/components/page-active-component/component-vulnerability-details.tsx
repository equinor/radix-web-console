import { Accordion, Typography } from '@equinor/eds-core-react';
import { FunctionComponent } from 'react';

import { useGetComponentVulnerabilities } from './use-get-component-vulnerability';

import { SimpleAsyncResource } from '../async-resource/simple-async-resource';
import { RequestState } from '../../state/state-utils/request-states';
import { ComponentScanDetails } from '../component/component-scan-details';

export interface ComponentVulnerabilityDetailsProps {
  appName: string;
  envName: string;
  componentName: string;
}

export const ComponentVulnerabilityDetails: FunctionComponent<
  ComponentVulnerabilityDetailsProps
> = ({ appName, envName, componentName }) => {
  const [state] = useGetComponentVulnerabilities(
    appName,
    envName,
    componentName
  );
  const vulnerabilityCount = state.data?.vulnerabilities?.length || 0;

  return (
    <Accordion className="accordion elevated" chevronPosition="right">
      <Accordion.Item
        isExpanded={
          state.status === RequestState.IN_PROGRESS || vulnerabilityCount > 0
        }
      >
        <Accordion.Header>
          <Accordion.HeaderTitle>
            <Typography className="whitespace-nowrap" variant="h4" as="span">
              Vulnerabilities (
              {state.status === RequestState.IN_PROGRESS
                ? 'â€¦'
                : vulnerabilityCount}
              )
            </Typography>
          </Accordion.HeaderTitle>
        </Accordion.Header>
        <Accordion.Panel>
          <SimpleAsyncResource asyncState={state}>
            {state.data && <ComponentScanDetails scan={state.data} />}
          </SimpleAsyncResource>
        </Accordion.Panel>
      </Accordion.Item>
    </Accordion>
  );
};
