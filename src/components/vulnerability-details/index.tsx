import { Accordion } from '@equinor/eds-core-react';
import * as PropTypes from 'prop-types';
import { FunctionComponent, useEffect, useState } from 'react';

import { Alert } from '../alert';
import { VulnerabilityList } from '../vulnerability-list';
import { Vulnerability } from '../../store/scan-api';
import {
  dataSorter,
  sortCompareNumber,
  sortDirection,
} from '../../utils/sort-utils';

export interface VulnerabilityDetailsProps {
  vulnerabilities?: Array<Vulnerability>;
  direction?: sortDirection;
}

const severityOrder: Record<string, number> = {
  critical: 1,
  high: 2,
  medium: 3,
  low: 4,
};

function useGroupVulnerabilities(
  vulnerabilities: Array<Vulnerability>
): Record<string, Array<Vulnerability>> {
  const [groupedList, setGroupedList] = useState<
    Record<string, Array<Vulnerability>>
  >({});

  useEffect(() => {
    const list = dataSorter(vulnerabilities, [
      (a, b) => sortCompareNumber(a.cvss, b.cvss, 'descending'),
    ]).reduce<Record<string, Array<Vulnerability>>>((obj, x) => {
      const key = x.severity.toLowerCase();
      (obj[key] = obj[key] ?? []).push(x);
      return obj;
    }, {});

    setGroupedList(list);
  }, [vulnerabilities]);

  return groupedList;
}

export const VulnerabilityDetails: FunctionComponent<
  VulnerabilityDetailsProps
> = ({ vulnerabilities, direction = 'ascending' }) => {
  const groupedList = useGroupVulnerabilities(vulnerabilities);
  const keys = Object.keys(groupedList);

  return keys.length > 0 ? (
    <>
      {keys
        .sort((a, b) =>
          sortCompareNumber(
            severityOrder[a.toLowerCase()],
            severityOrder[b.toLowerCase()],
            direction
          )
        )
        .map((key) => (
          <Accordion key={key} className="accordion" chevronPosition="right">
            <Accordion.Item>
              <Accordion.Header>
                <Accordion.HeaderTitle>
                  {key.toUpperCase()} ({groupedList[key].length})
                </Accordion.HeaderTitle>
              </Accordion.Header>
              <Accordion.Panel>
                <VulnerabilityList vulnerabilityList={groupedList[key]} />
              </Accordion.Panel>
            </Accordion.Item>
          </Accordion>
        ))}
    </>
  ) : (
    <Alert>No vulnerabilities found</Alert>
  );
};

VulnerabilityDetails.propTypes = {
  vulnerabilities: PropTypes.array,
  direction: PropTypes.oneOf<sortDirection>(['ascending', 'descending']),
};
