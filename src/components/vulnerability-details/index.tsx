import { Accordion } from '@equinor/eds-core-react';
import type { FunctionComponent } from 'react';

import type { Vulnerability } from '../../store/scan-api';
import {
  dataSorter,
  type SortDirection,
  sortCompareNumber,
} from '../../utils/sort-utils';
import { Alert } from '../alert';
import { VulnerabilityList } from '../vulnerability-list';

export interface VulnerabilityDetailsProps {
  vulnerabilities?: Array<Vulnerability>;
  direction?: SortDirection;
}

const severityOrder: Record<string, number> = {
  critical: 1,
  high: 2,
  medium: 3,
  low: 4,
};

export const VulnerabilityDetails: FunctionComponent<
  VulnerabilityDetailsProps
> = ({ vulnerabilities, direction = 'ascending' }) => {
  const groupedList = dataSorter(vulnerabilities, [
    (a, b) => sortCompareNumber(a.cvss, b.cvss, 'descending'),
  ]).reduce<Record<string, Array<Vulnerability>>>((obj, x) => {
    const key = x.severity.toLowerCase();
    (obj[key] = obj[key] ?? []).push(x);
    return obj;
  }, {});
  const keys = Object.keys(groupedList);

  return keys.length > 0 ? (
    <>
      {keys
        .sort((a, b) =>
          sortCompareNumber(
            severityOrder[a.toLowerCase()],
            severityOrder[b.toLowerCase()],
            direction
          )
        )
        .map((key) => (
          <Accordion key={key} className="accordion" chevronPosition="right">
            <Accordion.Item>
              <Accordion.Header>
                <Accordion.HeaderTitle>
                  {key.toUpperCase()} ({groupedList[key].length})
                </Accordion.HeaderTitle>
              </Accordion.Header>
              <Accordion.Panel>
                <VulnerabilityList vulnerabilityList={groupedList[key]} />
              </Accordion.Panel>
            </Accordion.Item>
          </Accordion>
        ))}
    </>
  ) : (
    <Alert>No vulnerabilities found</Alert>
  );
};
